// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  cpf      String  @db.VarChar(11)
  name     String  @db.VarChar(100)
  email    String  @db.VarChar(100)
  phone    String  @db.VarChar(11)
  address  String? @db.VarChar(255) // TODO: Define structure for address

  orders Order[]
}

model Company {
  id      Int     @id @default(autoincrement())
  cnpj    String  @db.VarChar(14)
  name    String  @db.VarChar(100)
  email   String  @db.VarChar(100)
  phone   String  @db.VarChar(14)
  type    String  @db.VarChar(100)
  address String? @db.VarChar(255) // TODO: Define structure for address

  products Product[]
}

model Product {
  id              Int       @id @default(autoincrement())
  image           String // Change from blob to Bytes for Prisma
  name            String    @db.VarChar(100)
  description     String?   @db.VarChar(255)
  fullPrice       Decimal   @db.Decimal(10, 2) // Adjust precision and scale as needed
  discountedPrice Decimal   @db.Decimal(10, 2) // Adjust precision and scale as needed
  companyId       Int     
  stock           Int
  category        String?   @db.VarChar(100)
  condition       String // TODO: Define structure for condition
  expiresIn       DateTime?

  company Company @relation(fields: [companyId], references: [id])
  orders  Order[]
}

model Order {
  id    Int      @id @default(autoincrement())
  productId Int // Reference to Product
  userId   Int // Reference to User
  orderedAt DateTime
  delivered Boolean

  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id])
}
